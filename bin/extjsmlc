#!/usr/bin/env ruby

# require 'extjsml/generator'
require_relative "../lib/extjsml/generator"

def options_error
  puts "extjsmlc file.yml [-with-requierjs] [--class=jsclass]"
end

commands = ARGV
f = ARGV[0]
with_requirejs = commands.any?{ |a| a == "-with-requirejs" }
gen_config = {}
jsclass = commands.grep(/\-\-class/)

if jsclass.count == 1
  jsclass = jsclass.first.match(/\-\-class=(.*)/)[1]
else
  jsclass = nil
end

noid = commands.grep(/\-\-noid/).count > 0

if noid 
  gen_config.merge! :noid => true
end

if with_requirejs
  gen_config.merge! :with_requirejs => true
end

if f.nil?
  options_error
  exit(1)
end

file_ext_regexp = /\.ya?ml$/
if f == "."
  # "gen all yaml in dir"
  files = Dir.open(".").grep(file_ext_regexp)
else
  files = [f] 
end

# loop generate by given files
files.each do |file|
  dirname = File.dirname(File.absolute_path(file))
  gen_config.merge!( :filedir => dirname )

  js_class = file.split("/").last.gsub(file_ext_regexp, '')

  js_class = jsclass unless jsclass.nil?
  file_output_name = js_class
  gen_config.merge!(:file_output_name => file_output_name)
  js_class = js_class.capitalize

  yaml_str = File.open(file,'rb')
  contents = compile_jext(yaml_str, js_class, gen_config)

  # create js ui file
  File.open("#{dirname}/#{file_output_name}.ui.js","w") do |f|
    f.write(contents[:ui_class_content])
  end
  puts "#{file_output_name}.ui.js created"

  # gen js event script
  unless File.exist?("#{dirname}/#{file_output_name}.js")
    File.open("#{file_output_name}.js","w") do |f|
      f.write(contents[:event_class_content])
    end
    puts "#{file_output_name}.js created"
  end

end
